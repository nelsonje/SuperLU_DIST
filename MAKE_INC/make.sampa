############################################################################
#
#  Program:         SuperLU_DIST
#
#  Module:          make.inc
#
#  Purpose:         Top-level Definitions
#
#  Creation date:   February 4, 1999   version alpha
#
#  Modified:	    September 1, 1999  version 1.0
#                   March 15, 2003     version 2.0
#		    November 1, 2007   version 2.1
#		    September 1, 2011  version 3.0
#		    December 31, 2015  version 4.3
#
############################################################################
#
#  The machine (platform) identifier to append to the library names
#
PLAT		= _sampa

#
#  The name of the libraries to be created/linked to
#

DSuperLUroot 	= $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))
#DSuperLUroot 	= /sampa/share/SuperLU_DIST_4.3
DSUPERLULIB   = $(DSuperLUroot)/lib/libsuperlu_dist_4.3.a
#
# See bottom of file for Intel MKL use
###BLASDEF	     	= -DUSE_VENDOR_BLAS
####BLASLIB	        =
#
############################################################################
## parmetis 4.x.x, 32-bit integer
PARMETIS_DIR	:= /sampa/share/parmetis-4.0.3-32bit
## parmetis 4.x.x, 64-bit integer
# PARMETIS_DIR	:= ${HOME}/Edison/lib/parmetis-4.0.3_64
###PARMETIS_DIR	=/project/projectdirs/mp127/parmetis-4.0.3-g
METISLIB := -L${PARMETIS_DIR}/build/Linux-x86_64/libmetis -lmetis
PARMETISLIB := -L${PARMETIS_DIR}/build/Linux-x86_64/libparmetis -lparmetis
I_PARMETIS := -I${PARMETIS_DIR}/include -I${PARMETIS_DIR}/metis/include
############################################################################


# Define the required Fortran libraries, if you use C compiler to link
# FLIBS	 	= -lpgf90 -lpgf90_rpm1  ## for PGI compiler
#FLIBS	 	= -lifport -lifcore     ## for Intel compiler

# Define all the libraries
LIBS	     	= $(DSUPERLULIB) $(BLASLIB) $(PARMETISLIB) $(METISLIB) $(FLIBS)

#
#  The archiver and the flag(s) to use when building archive (library)
#  If your system has no ranlib, set RANLIB = echo.
#
ARCH         	= ar
ARCHFLAGS    	= cr
RANLIB       	= ranlib

############################################################################
# C compiler setup
CC           	= mpicc
# CFLAGS should be set to be the C flags that include optimization
CFLAGS          = -O3 -m64 -std=c99 -Wall -g -fopenmp \
		$(I_PARMETIS) -DDEBUGlevel=0 -DPRNTlevel=0 -DPROFlevel=0 \
# uncomment the following to use 64-bit integer
# CFLAGS 		+= -D_LONGINT

# NOOPTS should be set to be the C flags that turn off any optimization
NOOPTS		= -O0 -std=c99
############################################################################
# FORTRAN compiler setup
FORTRAN         = mpifc
F90FLAGS	= -fast #-Mipa=fast,safe
# uncomment the following to use 64-bit integer
# F90FLAGS	+= -i8
############################################################################
LOADER	        = $(CC)
LOADOPTS	= -fopenmp
############################################################################
#  C preprocessor defs for compilation (-DNoChange, -DAdd_, or -DUpCase)
#
#  Need follow the convention of how C calls a Fortran routine.
#
CDEFS        = -DAdd_


### for Intel MKL with GCC
CFLAGS+= -m64 -I${MKLROOT}/include
BLASLIB= ${MKLROOT}/lib/intel64/libmkl_scalapack_lp64.a -Wl,--start-group ${MKLROOT}/lib/intel64/libmkl_intel_lp64.a ${MKLROOT}/lib/intel64/libmkl_core.a ${MKLROOT}/lib/intel64/libmkl_sequential.a ${MKLROOT}/lib/intel64/libmkl_blacs_intelmpi_lp64.a -Wl,--end-group -lpthread -lm -ldl
BLASDEF= -DUSE_VENDOR_BLAS
